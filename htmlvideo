#!/bin/bash -e

verbose="-v warning"

if ! ffmpeg -version | head -n1
then
	echo Missing ffmpeg
	exit 1
fi

if ! test -f "$1"
then
	echo Missing RAW file to encode to MP4
	exit
fi

input="$1"

eval $(ffprobe -v 0 -of flat=s=_ -show_format "$input") # neat trick to get video variables into shell
if test "$format_tags_creation_time"
then
	# keep directory dates related to video file
	today=$(echo $format_tags_creation_time | awk '{print $1}')
fi

test "$today" || today="$(date --iso-8601=date)"
out=$today/$(basename "${input%.*}").mp4

if test -f "$out"
then
	echo $out already exists
	exit
fi

mkdir "$today" &>/dev/null || true

echo -e "\033[1;34m$0\033[m Generating $out"
time ffmpeg $verbose -y -i "$input" -movflags +faststart -pix_fmt yuv420p -c:v libx264 \
	-vprofile baseline -acodec aac -strict experimental $out

# Generate HTML
. $(dirname $0)/html-template

echo -e "\033[1;34m$0\033[m created $(test "$format_duration" && echo duration: $format_duration seconds)"

echo -e "\033[1;34m$0\033[m compressed $(du -h "$input" "$out" | tr '\n\t' ' ') $(stat -c %s "$input" "$out" | awk 't{printf("%.2f\n",100*$1/t)}{t=$1}')% of size"

test -f ~/.r2d2 && source ~/.r2d2

if test "$dest"
then
	echo rsync -r --progress --remove-source-files $today $dest
	echo -e "\033[1;34m$0\033[m SHARE URL: http://$(basename $dest)/$html"
fi
