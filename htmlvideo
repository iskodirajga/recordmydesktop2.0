#!/bin/bash -e

verbose="-v warning"

if ! test -f "$1"
then
	echo Missing RAW file to encode to WebM
	exit
fi

input="$1"

eval $(ffprobe -v 0 -of flat=s=_ -show_format "$input") # neat trick to get video variables into shell
test "$format_tags_creation_time" && today=$(echo $format_tags_creation_time | awk '{print $1}') # keep directory dates related to video file

test "$today" || today="$(date --iso-8601=date)"
out=$today/$(basename ${input%.*}).webm

if test -f "$out"
then
	echo $out already exists
	exit
fi


mkdir "$today" &>/dev/null || true
mp4="${out%.*}.mp4" 

time ffmpeg $verbose -y -i "$input" -movflags +faststart -pix_fmt yuv420p -c:v libx264 -threads auto -vprofile baseline -acodec aac -strict experimental $mp4

time ffmpeg $verbose -y -i "$input" -c:a libvorbis -q:a 7 -c:v libvpx -threads auto "$out"

. $(dirname $0)/html-template

echo -e "\033[1;34m$0\033[m created $(test "$format_duration" && echo duration: $format_duration seconds)"

if test -f "$mp4"
then
	echo -e "\033[1;34m$0\033[m compressed $(du -h "$input" "$mp4" | tr '\n\t' ' ') $(stat -c %s "$input" "$mp4" | awk 't{printf("%.2f\n",100*$1/t)}{t=$1}')% of size"
fi
echo -e "\033[1;34m$0\033[m compressed $(du -h "$input" "$out" | tr '\n\t' ' ') $(stat -c %s "$input" "$out" | awk 't{printf("%.2f\n",100*$1/t)}{t=$1}')% of size"

test -f ~/.r2d2 && source ~/.r2d2

if test "$dest"
then
	echo rsync -r --progress --remove-source-files $today $dest
	echo -e "\n\033[1;34m$0\033[m SHARE URL: http://$(basename $dest)/$html\n"
fi
